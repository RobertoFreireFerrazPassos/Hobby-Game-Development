pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- main
function _init()
	
end

function _update()
	if rnd(1000) > 990 then
		newememy(
			130,
			rnd(64)+16,
			3,
			{
				x = 1,
				y = 1,
				w = 15,
				h = 14
			})
	end

 p:update()
 
 foreach(e, function(e)
		e:update()
	end) 
end

function _draw()
 cls()
 foreach(e, function(e)
		e:draw()
	end)
 p:draw()
 drawhud()
end
-->8
-- player
score = "-----"

p = {
	x = 0,
	y = 16,
	s = 1,
	v = 1,
	l = 3,
	b = {},
	bt = 0,
	hb = {
		x = 0,
		y = 3,
		w = 16,
		h = 13
	},
	update = function(s)
			if s.y > 8 and btn(⬆️) then s.y = s.y - s.v end
			if s.y < 112 and btn(⬇️) then s.y = s.y + s.v end
			
			if btn(❎) and s.bt == 0 then
				add(s.b,newbullet(s.x+16,s.y+7))
			 s.bt = 1
			 sfx(0)
			end
			
			if s.bt > 0 then
				s.bt = s.bt + 1
			end
			
			if s.bt > 10 then
				s.bt = 0
			end
			
			foreach(s.b, function(b)
				b:update()
			end)
	end,
	draw = function(s)		
		foreach(s.b, function(b)
			b:draw()
		end)
		spr(s.s,s.x,s.y,2,2)
	end
}

-- bullet
newbullet = function(x,y)
		local o = {}
	
		o = {
			x = x,
			y = y,
			hb = {
				x = 0,
				y = 0,
				w = 4,
				h = 1
			},
			update = function(s)
				s.x = s.x + 2
			end,
			draw = function(s)
				rectfill(s.x,s.y,s.x+4,s.y+1)
			end
		}
		
		return o		
end
-->8
-- hud
drawhud = function()
		for i=1,p.l do
			spr(16,(i-1)*10,0)
		end
		
		print(score,100,0)
end
-->8
-- enemy
e = {}

newememy = function(x,y,s,hb)
		local o = {}

		o = {
			x = x,
			y = y,
			s = s,
			hb = hb,
			update = function(s)
				s.x = s.x - 1
				
				foreach(p.b, function(b)
					if rect_overlap(b,s) then
						del(e,s)
						del(p.b,b)
					end
				end)
			end,
			draw = function(s)
				spr(s.s,s.x,s.y,2,2)
			end
		}
		add(e,o)
		return o		
end
-->8
-- utils
function rect_overlap(o1,o2)
    local x1, y1, w1, h1, x2, y2, w2, h2=
    				o1.x+o1.hb.x,
								o1.y+o1.hb.y,
								o1.hb.x+o1.hb.w,
								o1.hb.y+o1.hb.h,
								o2.x+o2.hb.x,
								o2.y+o2.hb.y,
								o2.hb.x+o2.hb.w,
								o2.hb.y+o2.hb.h
    
    return x1 < x2 + w2 and
           x2 < x1 + w1 and
           y1 < y2 + h2 and
           y2 < y1 + h1
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000660000666600000000009999990099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000660000666600000000009999990099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070000660066c666000000990099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000660066cc66000000990099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666666cc6666699009999990099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06600660666666666cc6666699009999990099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6566665600660066cc66000000990099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6666666600660066c666000000990099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666660000666600000000009999990099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
65666656660000666600000000009999990099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06666660000000000000000000000099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666600000000000000000000000099990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100001a250232502a2502f2503325036250392503b2503c2503e2503f2503f2503f2503220035200382003c2003d2000000000000000000000000000000000000000000000000000000000000000000000000
